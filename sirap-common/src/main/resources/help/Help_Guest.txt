?                  list help, in this system, all commands are case-insensitive
?fire              display any record containing fire, sort by version date info
?^fire             display any record starting with fire, $+w, open IE for online help
?fire$             display any record ending with water
?fire&water        display any record containing both fire and water
?fire|water        display any record containing fire or water
'rx:\d+            full regular expression matched, aka regex matched, start with rx:whatever
'fire              the single quote behaves exactly the same as question mark, and i prefer '
search             the aforementioned rules apply for any other searching commands
search             such as 'ch fire', 'F: water' and so on
any ${user.dir}    replace given expression with values in system props, env vars or user config if whole matched
options            whole expression must 1) start with $ 2) contain no space and 3) sub options separated by comma
options            must 4) be at the beginning or end of the whole command
options            must be separated by space or greater than symbol > with other part of the command
options            use \\s and \\c to express space and comma respectively, $K=A\\cB\\sC, means name is "A,B C"
suck               enable to suck options, default enabled
nosuck             disable to suck options
quit               ${guest.quits}, ,!> escape export, !$ escape options
ABC $+new          any operation could be performed in a new thread, options: $+new
ABC $+FF>target    $+ff to parse internal objects to normal files, treat them as files it possible
ABC>:              : to copy strings to a remote web location, default to be http://www.aka10.com/finals
ABC>:              :http://www.nba.com/finals to copy files or strings to www.nba.com, for instance
ABC $+FF>:         : to copy files to a remote web location, default to be http://www.aka10.com/finals
ABC>:siteA         siteA should be defined in user config file, copy to the location it stands for
ABC>#              # to copy files to given location, in this case the yielded files will be copied to folder export
ABC>#E:            the yielded files will be copied to E:
ABC>#E:\nonexist   the yielded files will be copied to E:\nonexist, folder nonexist will be created on the fly
ABC>#misc          the yielded files will be copied to folder storage\misc, misc is a folder in storage
ABC>#nonexist      the yielded files will be copied to export\nonexist
ABC>#E:\na\nb      the yielded files will be copied to export\na\nb, suppose na is not a directory of E:
ABC>.              the yielded content will be exported as text to file export\ABC.txt
ABC>*              the yielded content will be sirap-encoded and exported to file export\ABC.sirap
ABC>*E:            the yielded content will be sirap-encoded and exported to file E:\ABC.sirap
ABC>E:             the yielded content will be exported as text to file E:\ABC.txt
ABC>E:\nonexist    the yielded content will be exported as text to file E:\nonexist.txt
ABC>E:\non.txt     the yielded content will be exported as text to file E:\non.txt
ABC>E:\non.java    the yielded content will be exported as text to file E:\non.java
ABC>E:\non.[txt]   text types are: txt,properties,java,js,json,css,xml,pom,bat,cpp,sh,py,sql,cmd,md,sirap,ini
ABC>E:\non.pdf     the yielded content will be exported as text to file E:\non.pdf
ABC>E:\non.xls     the yielded content will be exported as text to file E:\non.xls
ABC>E:\non.xlsx    the yielded content will be exported as text to file E:\non.xlsx
ABC>E:\non.htm     the yielded content will be exported as text to file E:\non.htm
ABC>E:\non.html    the yielded content will be exported as text to file E:\non.html
ABC>E:\non.sirap   the yielded content will be exported as text to file E:\non.sirap