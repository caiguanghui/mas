-F:\fire.abc       print detail like size, creation time, last modified time, lines if text                 
-F:\fire.mp3       print detail like width*height if image/video, duration if audio/video
-F:\fire.mkv       print video detail by FFMpeg, ffmpeg -i "F:\fire.mkv"
-F:\fire.xls       print detail like size, creation time, excel sheet names    
F:\fly.txt         open the text file if no options at all             
F:\fly.txt $+line  print target file in text manner, $+sort,+uniq,+mark,+line,+case,+one
F:\fly.txt $+line  print target file in text manner, file size limit is ${text.max} by default
&F:\fly.txt        print target file in text manner in single one line, aka $+one with =F:\fly.txt
#F:\fly.txt        print target file in text manner, option: $+line, to show line number
#F:\folderA        list the names of folder or file at the deepest level
F:\fire\fly.mp3    for an audio file, the sound will be played by the configured audio player, same goes 
                   for video/photo/doc/docx/xls/xlsx/PDF files with their players/viewers respectively, 
                   when it comes to executable file, the file will run itself.
E:\abc.zip         list out whatever inside the zip file, same goes for .jar, .ear, and other zip files
F:\fire            for a folder, we just simply list the stuff in this folder
-F:\fire           for a folder, we just simply list the stuff in this folder, along with size info
F:\fire<           for a folder with 'less than' character, open Windows resource manager at this folder
<                  open Windows resource manager at storage
E:\Fly mp3&fire    display the files/folders whose name contains 'mp3' and 'fire' in the folder 
E:\Fly txt|kid     display the files/folders which name contains 'txt' or 'kid' in the folder
F:\fire 3          recursively list the stuff in the folder and its subs till layer 3, !3 escape layer, $+case
F:\fire 3 txt      recursively list the txt files in the folder and its subs till layer three
F:\Lon Don, 3 txt  this will recursively list the txt files in the folder and its subs till layer three
F:\fly.txt fi&wa   conduct search in given text file with given criteria and print out, $+order,+line,+case
F:\D o\a.txt, f&w  conduct search in given text file with given criteria and print out, path has spaces
F:\fly.xls 0       print index-designated excel sheet
F:\D o\a.xlsx, 1   print index-designated excel sheet
mexFile            criteria could be :-d not to show directory, :-f not to show normal file
F: 3 >3.3M         file search by size-unit criteria, > great than, < less than, ~ about 0.1 difference
F: 3 >3.3M         size-unit criteria, = equal 0.01 diff, 3.3B, 3.3K, also for units like M,G,T,P and E
:                  list out all available disks in detail manner, $+size,+date,+bydate,+bysize,-byname,+bytype
::                 similar to performing C:, D: and all other available disks all together, $+kids
::\fire            similar to performing C:\fire, D:\fire and all other available disks all together
::\fire 3 txt      recursively display for all available disks
vv                 display folder names configured in v.folder nodes, "v folders"
v..                list all files in v folders recursively by given depth, default 2 and configurable 
v..                use options like $+size,+date,+bydate,+bysize,-byname, +sizes (kids included)
vr                 refresh 'v folders' cache, the changes in folders will be reflected in next search
v homeland&tower   conduct search in v folders by multiple conditions, & for 'and', | for 'or'
v 5.3              the number-format criteria would be additionally read as season 05 episode 03
(wi\d+)@http://a.cn  filter out those records matching the specified java regex. $+order,+case
(wi\d+)@E:\a.txt   filter out those records matching the specified java regex. $+line,+case,icon=\s
(wi\d+)@E:\a.txt   $icon=\s, item connector, default is [, ], $gcon=#, group connector, default is [; ]
pdf1,4-7 E:\A.pdf  select specified pages from give PDF and export to a new PDF file
pdf A.pdf,B.pdf    merge all PDF files and export to a new PDF file
dc                 day check, display memory entries that would happen within 30 days
mm                 display last 20 memory entries in file specified as 'file.memory' in user config
mm3                display last N memory entries
mm..               display all memory entries
mm fire            search and display memory entries matching criteria